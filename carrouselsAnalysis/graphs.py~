# -*- coding: utf-8 -*-
"""

Ceci est un package python qui contient les fonctions
pour tracer des graphs d'analyse des données d'un
carrousel.

Il contient les fonctions suivantes:
    trace_precision_moy_station:
        trace un bar graph présentant la precision moyenne d'arrêt par station
    trace_dispersion_station:
        trace un graphe boite à moustaches montrant la gaussienne de precision
        d'arrêt par station

"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

cols_precision = ['StopStation', 'DistanceSSP']

def trace_precision_moyenne_station(data, cols=cols_precision,
                                    color=None, figsize=(8,10),
                                    xlim=(1,-1), trace_moy=True,
                                    hue='TypeMouvement'):

    fig = plt.figure(figsize=figsize)

    if hue:
        color=None
    
    sns.barplot(data=data, y=cols[0], x=cols[1],
                color=color, orient='h', hue=hue, ci=None, dodge=False)
    plt.title(f"Précision moyenne d'arrêt par station", size=16)
    plt.xlim(xlim[0],xlim[1])
    if trace_moy:
        plt.axvline(mouvements['DistanceSSP'].mean(), color='r', ls='--',
            label=f"Moyenne = {mouvements['DistanceSSP'].mean():.2f}")
    plt.legend()
    plt.xlabel('Distance au SSP')
    plt.ylabel("Station d'arrivée")
    return plt.show()

def trace_dispersion_station(data, cols=cols_precision,
                             color='tab:blue', figsize=(8,10), xlim=(0.5,0),
                             trace_moy=True, sort=True):

    fig = plt.figure(figsize=figsize)
    if sort:
        ordre=data[cols[0]].sort_values().unique()
    else:
        ordre=None
    sns.boxplot(x=cols[1], y=cols[0], data=data, color=color, order=ordre)
    plt.title("Répartition statistique des arrêts par station", size=16)
    plt.xlabel('Distance au SSP')
    plt.ylabel("Station d'arrivée")
    plt.xlim(xlim[0],xlim[1])    
    if trace_moy:
        plt.axvline(data[cols[1]].mean(), color='r', ls='--',
            label=f"Moyenne = {data[cols[1]].mean():.2f}")
    plt.legend()
    return plt.show()
